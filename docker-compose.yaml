services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: githubcrm-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: githubcrm
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - githubcrm-network

  # MongoDB for logging and analytics
  mongodb:
    image: mongo:6.0
    container_name: githubcrm-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin123
      MONGO_INITDB_DATABASE: githubcrm_actions
    volumes:
      - mongodb_data:/data/db
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - githubcrm-network

  # Redis for BullMQ
  redis:
    image: redis:7-alpine
    container_name: githubcrm-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - githubcrm-network

  # NestJS Backend Application
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: githubcrm-backend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/githubcrm?schema=public
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=
      - REDIS_DB=0
      - MONGODB_URI=mongodb://admin:admin123@mongodb:27017/githubcrm_actions?authSource=admin
      - JWT_SECRET=your-super-secret-jwt-key-change-in-production
      - JWT_ACCESS_EXPIRATION=15m
      - JWT_REFRESH_EXPIRATION=7d
      - PORT=3000
      - ALLOWED_ORIGINS=http://localhost:5173,http://localhost:3000,http://localhost:3001
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      mongodb:
        condition: service_healthy
    volumes:
      - ./backend/uploads:/app/uploads
      - ./backend/logs:/app/logs
    networks:
      - githubcrm-network
    healthcheck:
      test: ["CMD", "curl", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # React Frontend Application
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: githubcrm-frontend
    restart: unless-stopped
    ports:
      - "5173:5173"
    environment:
      - VITE_API_BASE_URL=http://localhost:3000
      - VITE_APP_NAME=GitHub CRM
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - githubcrm-network

volumes:
  postgres_data:
    driver: local
  mongodb_data:
    driver: local
  redis_data:
    driver: local

networks:
  githubcrm-network:
    driver: bridge